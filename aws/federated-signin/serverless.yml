service:
  name: ${env:NAME}
plugins:
  - serverless-dotenv-plugin

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${env:STAGE}
  region: ${env:REGION}
  versionFunctions: false

resources:
  Resources:
    CognitoUserPoolIdentityProviderGoogle:
      Type: AWS::Cognito::UserPoolIdentityProvider
      Properties:
        ProviderName: Google
        AttributeMapping:
          name: name
          email: email
          phone_number: phoneNumbers
        ProviderDetails:
          client_id: ${env:GOOGLE_CLIENT_ID}
          client_secret: ${env:GOOGLE_SECRET_KEY}
          authorize_scopes: openid email phone profile
        ProviderType: Google
        UserPoolId:
          Ref: CognitoUserPool

    CognitoUserPoolIdentityProviderFacebook:
      Type: AWS::Cognito::UserPoolIdentityProvider
      Properties:
        ProviderName: Facebook
        AttributeMapping:
          name: name
          email: email
        ProviderDetails:
          client_id: ${env:FACEBOOK_CLIENT_ID}
          client_secret: ${env:FACEBOOK_SECRET_KEY}
          authorize_scopes: public_profile,email
        ProviderType: Facebook
        UserPoolId:
          Ref: CognitoUserPool

    CognitoUserPoolIdentityProviderAmazon:
      Type: AWS::Cognito::UserPoolIdentityProvider
      Properties:
        ProviderName: LoginWithAmazon
        AttributeMapping:
          email: email
          name: name
        ProviderDetails:
          client_id: ${env:AMAZON_CLIENT_ID}
          client_secret: ${env:AMAZON_SECRET_KEY}
          authorize_scopes: profile postal_code
        ProviderType: LoginWithAmazon
        UserPoolId:
          Ref: CognitoUserPool
    CognitoUserPool:
      Type: AWS::Cognito::UserPool
      Properties:
        UserPoolName: ${env:NAME}-${env:STAGE}-user-pool
        AutoVerifiedAttributes:
          - email
        MfaConfiguration: "OFF"
        UsernameAttributes:
          - email
        EmailConfiguration:
          ReplyToEmailAddress: support@wednesday.is
        EmailVerificationMessage: Your verification code is {####}.
        EmailVerificationSubject: Your verification code
        Policies:
          PasswordPolicy:
            MinimumLength: 8
            RequireLowercase: True
            RequireNumbers: True
            RequireSymbols: True
            RequireUppercase: True
        Schema:
          - Name: email
            AttributeDataType: String
            Mutable: false
            Required: true
    CognitoUserPoolClient:
      Type: AWS::Cognito::UserPoolClient
      DependsOn:
        - CognitoUserPoolIdentityProviderAmazon
        - CognitoUserPoolIdentityProviderGoogle
        - CognitoUserPoolIdentityProviderFacebook
      Properties:
        ClientName: ${self:service.name}-${self:provider.stage}-user-pool-client
        GenerateSecret: false
        SupportedIdentityProviders:
          - Google
          - Facebook
          - LoginWithAmazon
          - COGNITO
        CallbackURLs:
          - ${env:CALLBACK_URL}
        LogoutURLs:
          - ${env:LOGOUT_URL}
        AllowedOAuthFlows:
          - implicit
        AllowedOAuthScopes:
          - email
          - openid
          - aws.cognito.signin.user.admin
          - profile
          - phone
        ExplicitAuthFlows:
          - ALLOW_REFRESH_TOKEN_AUTH
          - ALLOW_USER_SRP_AUTH
        AllowedOAuthFlowsUserPoolClient: true
        UserPoolId: !Ref CognitoUserPool

    CognitoUserPoolDomain:
      Type: AWS::Cognito::UserPoolDomain
      Properties:
        Domain: ${self:service.name}-${self:provider.stage}
        UserPoolId: !Ref CognitoUserPool

  Outputs:
    UserPoolId:
      Description: The Id of the CognitoUserPool
      Value: !Ref CognitoUserPool
    UserPoolClientId:
      Description: The Id of the UserPoolClientId
      Value: !Ref CognitoUserPoolClient
